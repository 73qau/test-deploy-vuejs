# name: Deploy to DigitalOcean Droplet1
# 'on':
#   push:
#     branches:
#       - main

# jobs:
#   deploy:
#     runs-on: ubuntu-latest
#     environment: DIGITALOCEAN_ACCESS_TOKEN
#     env:
#       Greeting: algo
#       prueba: ${{ vars.DAY_OF_WEEK }}
#       VITE_TEST_VAR: ${{ vars.VITE_TEST_VAR }}
#     steps:
#       - uses: actions/checkout@v4
#       - uses: actions/setup-node@v4
#         with:
#           node-version: 18
#       - name: Imprimir cosas
#         run: echo "${{ env.Greeting }} ${{ env.prueba }}. Today is ${{ vars.DAY_OF_WEEK }}!"
#       - name: Deploy to DigitalOcean Droplet
#         uses: appleboy/ssh-action@master
#         with:
#           host: ${{secrets.HOST}}
#           username: ${{secrets.USERNAME}}
#           key: ${{secrets.KEY}}
#           script: |
#             cd /var/www/test-deploy-vuejs/
#             npm install && npm run build
#             echo 'Deployment to digital ocean finished'

name: Deploy to DigitalOcean Droplet1
"on":
  push:
    branches:
      - main
  pull_request:
    branches: [ main ]

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
    environment: DIGITALOCEAN_ACCESS_TOKEN
    steps:
      - uses: actions/checkout@v3
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}
      - name: Imprimir cosas
        run: echo "Deployment started!"
      - name: Deploy to DigitalOcean Droplet
        uses: appleboy/ssh-action@master
        env:
          REPOSITORY: git@github.com:73qau/test-deploy-vuejs.git
          TARGET_FOLDER: /var/www/test-deploy-vuejs/
          prueba: ${{ vars.DAY_OF_WEEK }}
          VITE_TEST_VAR: ${{ vars.VITE_TEST_VAR }}
        with:
          host: ${{ secrets.HOST }}
          username: ${{ secrets.USERNAME }}
          key: ${{ secrets.KEY }}
          script: |
            # Use environment variables REPOSITORY and TARGET_FOLDER
            echo "Deploying to ${{ env.TARGET_FOLDER }} from ${{ env.REPOSITORY }}"

            # Check if the project directory exists
            if [ ! -d "${{ env.TARGET_FOLDER }}" ]; then
              # Directory does not exist, clone the project
              echo "Directory not found. Cloning repository."
              git clone ${{ env.REPOSITORY }} ${{ env.TARGET_FOLDER }}
            else
              # Directory exists, pull the latest changes
              echo "Directory found. Pulling latest changes."
              cd ${{ env.TARGET_FOLDER }}
              git pull
            fi

            # Navigate to the project directory
            cd ${{ env.TARGET_FOLDER }}

            # Install dependencies and build the project
            echo "Running npm install and build..."
            npm install
            npm run build
            echo 'Deployment to Digital Ocean finished'
